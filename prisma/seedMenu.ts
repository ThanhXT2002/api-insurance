import { PrismaClient } from '../generated/prisma'

const prisma = new PrismaClient()

/**
 * Seed Menu Categories v√† Menu Items
 * T·∫°o menu b√†i vi·∫øt v·ªõi c·∫•u tr√∫c 4 level
 */
async function seedMenu() {
  console.log('üå± B·∫Øt ƒë·∫ßu seed menu...')

  try {
    // 1. T·∫°o ho·∫∑c l·∫•y user admin ƒë·ªÉ l√†m createdBy/updatedBy
    let adminUser = await prisma.user.findFirst({
      where: { email: 'tranxuanthanhtxt2002@gmail.com' }
    })

    if (!adminUser) {
      console.log('T·∫°o admin user...')
      adminUser = await prisma.user.create({
        data: {
          email: 'tranxuanthanhtxt2002@gmail.com',
          name: 'Admin User',
          active: true
        }
      })
    }

    const adminId = adminUser.id
    console.log(`‚úÖ Admin user ID: ${adminId}`)

    // 2. T·∫°o MenuCategory cho menu b√†i vi·∫øt
    let postMenuCategory = await prisma.menuCategory.findUnique({
      where: { key: 'menu-post' }
    })

    if (!postMenuCategory) {
      console.log('T·∫°o Menu Category: B√†i vi·∫øt...')
      postMenuCategory = await prisma.menuCategory.create({
        data: {
          key: 'menu-post',
          name: 'Menu B√†i Vi·∫øt',
          description: 'Menu ch·ª©a c√°c danh m·ª•c b√†i vi·∫øt',
          active: true,
          position: 'header',
          createdBy: adminId,
          updatedBy: adminId
        }
      })
      console.log(`‚úÖ ƒê√£ t·∫°o MenuCategory: ${postMenuCategory.name}`)
    } else {
      console.log('‚úÖ MenuCategory ƒë√£ t·ªìn t·∫°i, b·ªè qua...')
    }

    const categoryId = postMenuCategory.id

    // 3. Ki·ªÉm tra xem ƒë√£ c√≥ menu items ch∆∞a
    const existingItems = await prisma.menuItem.count({
      where: { categoryId }
    })

    if (existingItems > 0) {
      console.log(`‚ö†Ô∏è  ƒê√£ c√≥ ${existingItems} menu items trong category n√†y. B·ªè qua seed.`)
      console.log('   N·∫øu mu·ªën seed l·∫°i, h√£y x√≥a c√°c items c≈© tr∆∞·ªõc.')
      return
    }

    // 4. T·∫°o Menu Items v·ªõi c·∫•u tr√∫c 4 level
    console.log('\nüìù B·∫Øt ƒë·∫ßu t·∫°o Menu Items...\n')

    // ===== LEVEL 1: Root Items =====
    console.log('üîπ Level 1: Root items')

    const level1_baiviet = await prisma.menuItem.create({
      data: {
        categoryId,
        key: '0',
        label: 'B√†i Vi·∫øt',
        icon: 'pi pi-file',
        url: '/bai-viet',
        routerLink: '/bai-viet',
        active: true,
        order: 0,
        isBlank: false,
        expanded: true,
        createdBy: adminId,
        updatedBy: adminId
      }
    })
    console.log(`   ‚úì [0] ${level1_baiviet.label}`)

    const level1_tintuc = await prisma.menuItem.create({
      data: {
        categoryId,
        key: '1',
        label: 'Tin T·ª©c',
        icon: 'pi pi-calendar',
        url: '/tin-tuc',
        routerLink: '/tin-tuc',
        active: true,
        order: 1,
        isBlank: false,
        expanded: false,
        createdBy: adminId,
        updatedBy: adminId
      }
    })
    console.log(`   ‚úì [1] ${level1_tintuc.label}`)

    const level1_huongdan = await prisma.menuItem.create({
      data: {
        categoryId,
        key: '2',
        label: 'H∆∞·ªõng D·∫´n',
        icon: 'pi pi-book',
        url: '/huong-dan',
        routerLink: '/huong-dan',
        active: true,
        order: 2,
        isBlank: false,
        expanded: false,
        createdBy: adminId,
        updatedBy: adminId
      }
    })
    console.log(`   ‚úì [2] ${level1_huongdan.label}`)

    // ===== LEVEL 2: Children c·ªßa "B√†i Vi·∫øt" (0) =====
    console.log('\nüîπ Level 2: Children c·ªßa [0] B√†i Vi·∫øt')

    const level2_baohiem = await prisma.menuItem.create({
      data: {
        categoryId,
        parentId: level1_baiviet.id,
        key: '0-0',
        label: 'B·∫£o Hi·ªÉm',
        icon: 'pi pi-shield',
        url: '/bai-viet/bao-hiem',
        routerLink: '/bai-viet/bao-hiem',
        active: true,
        order: 0,
        isBlank: false,
        expanded: true,
        createdBy: adminId,
        updatedBy: adminId
      }
    })
    console.log(`   ‚úì [0-0] ${level2_baohiem.label}`)

    const level2_taichinh = await prisma.menuItem.create({
      data: {
        categoryId,
        parentId: level1_baiviet.id,
        key: '0-1',
        label: 'T√†i Ch√≠nh',
        icon: 'pi pi-dollar',
        url: '/bai-viet/tai-chinh',
        routerLink: '/bai-viet/tai-chinh',
        active: true,
        order: 1,
        isBlank: false,
        expanded: false,
        createdBy: adminId,
        updatedBy: adminId
      }
    })
    console.log(`   ‚úì [0-1] ${level2_taichinh.label}`)

    const level2_suckhoe = await prisma.menuItem.create({
      data: {
        categoryId,
        parentId: level1_baiviet.id,
        key: '0-2',
        label: 'S·ª©c Kh·ªèe',
        icon: 'pi pi-heart',
        url: '/bai-viet/suc-khoe',
        routerLink: '/bai-viet/suc-khoe',
        active: true,
        order: 2,
        isBlank: false,
        expanded: false,
        createdBy: adminId,
        updatedBy: adminId
      }
    })
    console.log(`   ‚úì [0-2] ${level2_suckhoe.label}`)

    // ===== LEVEL 2: Children c·ªßa "Tin T·ª©c" (1) =====
    console.log('\nüîπ Level 2: Children c·ªßa [1] Tin T·ª©c')

    const level2_thitruong = await prisma.menuItem.create({
      data: {
        categoryId,
        parentId: level1_tintuc.id,
        key: '1-0',
        label: 'Th·ªã Tr∆∞·ªùng',
        icon: 'pi pi-chart-line',
        url: '/tin-tuc/thi-truong',
        routerLink: '/tin-tuc/thi-truong',
        active: true,
        order: 0,
        isBlank: false,
        expanded: false,
        createdBy: adminId,
        updatedBy: adminId
      }
    })
    console.log(`   ‚úì [1-0] ${level2_thitruong.label}`)

    const level2_sukien = await prisma.menuItem.create({
      data: {
        categoryId,
        parentId: level1_tintuc.id,
        key: '1-1',
        label: 'S·ª± Ki·ªán',
        icon: 'pi pi-star',
        url: '/tin-tuc/su-kien',
        routerLink: '/tin-tuc/su-kien',
        active: true,
        order: 1,
        isBlank: false,
        expanded: false,
        createdBy: adminId,
        updatedBy: adminId
      }
    })
    console.log(`   ‚úì [1-1] ${level2_sukien.label}`)

    // ===== LEVEL 3: Children c·ªßa "B·∫£o Hi·ªÉm" (0-0) =====
    console.log('\nüîπ Level 3: Children c·ªßa [0-0] B·∫£o Hi·ªÉm')

    const level3_bhnhantho = await prisma.menuItem.create({
      data: {
        categoryId,
        parentId: level2_baohiem.id,
        key: '0-0-0',
        label: 'B·∫£o Hi·ªÉm Nh√¢n Th·ªç',
        icon: 'pi pi-users',
        url: '/bai-viet/bao-hiem/nhan-tho',
        routerLink: '/bai-viet/bao-hiem/nhan-tho',
        active: true,
        order: 0,
        isBlank: false,
        expanded: true,
        createdBy: adminId,
        updatedBy: adminId
      }
    })
    console.log(`   ‚úì [0-0-0] ${level3_bhnhantho.label}`)

    const level3_bhxe = await prisma.menuItem.create({
      data: {
        categoryId,
        parentId: level2_baohiem.id,
        key: '0-0-1',
        label: 'B·∫£o Hi·ªÉm Xe',
        icon: 'pi pi-car',
        url: '/bai-viet/bao-hiem/xe',
        routerLink: '/bai-viet/bao-hiem/xe',
        active: true,
        order: 1,
        isBlank: false,
        expanded: false,
        createdBy: adminId,
        updatedBy: adminId
      }
    })
    console.log(`   ‚úì [0-0-1] ${level3_bhxe.label}`)

    const level3_bhnha = await prisma.menuItem.create({
      data: {
        categoryId,
        parentId: level2_baohiem.id,
        key: '0-0-2',
        label: 'B·∫£o Hi·ªÉm Nh√†',
        icon: 'pi pi-home',
        url: '/bai-viet/bao-hiem/nha',
        routerLink: '/bai-viet/bao-hiem/nha',
        active: true,
        order: 2,
        isBlank: false,
        expanded: false,
        createdBy: adminId,
        updatedBy: adminId
      }
    })
    console.log(`   ‚úì [0-0-2] ${level3_bhnha.label}`)

    const level3_bhyte = await prisma.menuItem.create({
      data: {
        categoryId,
        parentId: level2_baohiem.id,
        key: '0-0-3',
        label: 'B·∫£o Hi·ªÉm Y T·∫ø',
        icon: 'pi pi-heart-fill',
        url: '/bai-viet/bao-hiem/y-te',
        routerLink: '/bai-viet/bao-hiem/y-te',
        active: true,
        order: 3,
        isBlank: false,
        expanded: false,
        createdBy: adminId,
        updatedBy: adminId
      }
    })
    console.log(`   ‚úì [0-0-3] ${level3_bhyte.label}`)

    // ===== LEVEL 3: Children c·ªßa "T√†i Ch√≠nh" (0-1) =====
    console.log('\nüîπ Level 3: Children c·ªßa [0-1] T√†i Ch√≠nh')

    const level3_dautu = await prisma.menuItem.create({
      data: {
        categoryId,
        parentId: level2_taichinh.id,
        key: '0-1-0',
        label: 'ƒê·∫ßu T∆∞',
        icon: 'pi pi-chart-bar',
        url: '/bai-viet/tai-chinh/dau-tu',
        routerLink: '/bai-viet/tai-chinh/dau-tu',
        active: true,
        order: 0,
        isBlank: false,
        expanded: false,
        createdBy: adminId,
        updatedBy: adminId
      }
    })
    console.log(`   ‚úì [0-1-0] ${level3_dautu.label}`)

    const level3_tietkiem = await prisma.menuItem.create({
      data: {
        categoryId,
        parentId: level2_taichinh.id,
        key: '0-1-1',
        label: 'Ti·∫øt Ki·ªám',
        icon: 'pi pi-wallet',
        url: '/bai-viet/tai-chinh/tiet-kiem',
        routerLink: '/bai-viet/tai-chinh/tiet-kiem',
        active: true,
        order: 1,
        isBlank: false,
        expanded: false,
        createdBy: adminId,
        updatedBy: adminId
      }
    })
    console.log(`   ‚úì [0-1-1] ${level3_tietkiem.label}`)

    // ===== LEVEL 4: Children c·ªßa "B·∫£o Hi·ªÉm Nh√¢n Th·ªç" (0-0-0) =====
    console.log('\nüîπ Level 4: Children c·ªßa [0-0-0] B·∫£o Hi·ªÉm Nh√¢n Th·ªç')

    const level4_treem = await prisma.menuItem.create({
      data: {
        categoryId,
        parentId: level3_bhnhantho.id,
        key: '0-0-0-0',
        label: 'Cho Tr·∫ª Em',
        url: '/bai-viet/bao-hiem/nhan-tho/tre-em',
        routerLink: '/bai-viet/bao-hiem/nhan-tho/tre-em',
        active: true,
        order: 0,
        isBlank: false,
        expanded: false,
        createdBy: adminId,
        updatedBy: adminId
      }
    })
    console.log(`   ‚úì [0-0-0-0] ${level4_treem.label}`)

    const level4_nguoilon = await prisma.menuItem.create({
      data: {
        categoryId,
        parentId: level3_bhnhantho.id,
        key: '0-0-0-1',
        label: 'Cho Ng∆∞·ªùi L·ªõn',
        url: '/bai-viet/bao-hiem/nhan-tho/nguoi-lon',
        routerLink: '/bai-viet/bao-hiem/nhan-tho/nguoi-lon',
        active: true,
        order: 1,
        isBlank: false,
        expanded: false,
        createdBy: adminId,
        updatedBy: adminId
      }
    })
    console.log(`   ‚úì [0-0-0-1] ${level4_nguoilon.label}`)

    const level4_nguoicaotuoi = await prisma.menuItem.create({
      data: {
        categoryId,
        parentId: level3_bhnhantho.id,
        key: '0-0-0-2',
        label: 'Cho Ng∆∞·ªùi Cao Tu·ªïi',
        url: '/bai-viet/bao-hiem/nhan-tho/nguoi-cao-tuoi',
        routerLink: '/bai-viet/bao-hiem/nhan-tho/nguoi-cao-tuoi',
        active: true,
        order: 2,
        isBlank: false,
        expanded: false,
        createdBy: adminId,
        updatedBy: adminId
      }
    })
    console.log(`   ‚úì [0-0-0-2] ${level4_nguoicaotuoi.label}`)

    const level4_giadinh = await prisma.menuItem.create({
      data: {
        categoryId,
        parentId: level3_bhnhantho.id,
        key: '0-0-0-3',
        label: 'G√≥i Gia ƒê√¨nh',
        url: '/bai-viet/bao-hiem/nhan-tho/gia-dinh',
        routerLink: '/bai-viet/bao-hiem/nhan-tho/gia-dinh',
        active: true,
        order: 3,
        isBlank: false,
        expanded: false,
        createdBy: adminId,
        updatedBy: adminId
      }
    })
    console.log(`   ‚úì [0-0-0-3] ${level4_giadinh.label}`)

    // ===== LEVEL 4: Children c·ªßa "B·∫£o Hi·ªÉm Xe" (0-0-1) =====
    console.log('\nüîπ Level 4: Children c·ªßa [0-0-1] B·∫£o Hi·ªÉm Xe')

    const level4_xemay = await prisma.menuItem.create({
      data: {
        categoryId,
        parentId: level3_bhxe.id,
        key: '0-0-1-0',
        label: 'Xe M√°y',
        url: '/bai-viet/bao-hiem/xe/xe-may',
        routerLink: '/bai-viet/bao-hiem/xe/xe-may',
        active: true,
        order: 0,
        isBlank: false,
        expanded: false,
        createdBy: adminId,
        updatedBy: adminId
      }
    })
    console.log(`   ‚úì [0-0-1-0] ${level4_xemay.label}`)

    const level4_oto = await prisma.menuItem.create({
      data: {
        categoryId,
        parentId: level3_bhxe.id,
        key: '0-0-1-1',
        label: '√î T√¥',
        url: '/bai-viet/bao-hiem/xe/o-to',
        routerLink: '/bai-viet/bao-hiem/xe/o-to',
        active: true,
        order: 1,
        isBlank: false,
        expanded: false,
        createdBy: adminId,
        updatedBy: adminId
      }
    })
    console.log(`   ‚úì [0-0-1-1] ${level4_oto.label}`)

    const level4_xetai = await prisma.menuItem.create({
      data: {
        categoryId,
        parentId: level3_bhxe.id,
        key: '0-0-1-2',
        label: 'Xe T·∫£i',
        url: '/bai-viet/bao-hiem/xe/xe-tai',
        routerLink: '/bai-viet/bao-hiem/xe/xe-tai',
        active: true,
        order: 2,
        isBlank: false,
        expanded: false,
        createdBy: adminId,
        updatedBy: adminId
      }
    })
    console.log(`   ‚úì [0-0-1-2] ${level4_xetai.label}`)

    // ===== T·ªïng k·∫øt =====
    const totalItems = await prisma.menuItem.count({ where: { categoryId } })
    console.log(`\n‚úÖ Ho√†n th√†nh! ƒê√£ t·∫°o ${totalItems} menu items v·ªõi c·∫•u tr√∫c 4 level.`)
    console.log('\nüìä C·∫•u tr√∫c Menu:')
    console.log('   Level 1: 3 items (B√†i Vi·∫øt, Tin T·ª©c, H∆∞·ªõng D·∫´n)')
    console.log('   Level 2: 5 items')
    console.log('   Level 3: 6 items')
    console.log('   Level 4: 7 items')
    console.log('   ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ')
    console.log(`   T·ªïng: ${totalItems} items`)
  } catch (error) {
    console.error('‚ùå L·ªói khi seed menu:', error)
    throw error
  } finally {
    await prisma.$disconnect()
  }
}

// Ch·∫°y seed
seedMenu()
  .then(() => {
    console.log('\nüéâ Seed menu th√†nh c√¥ng!')
    process.exit(0)
  })
  .catch((error) => {
    console.error('\nüí• Seed menu th·∫•t b·∫°i:', error)
    process.exit(1)
  })
